name: CI on Self-hosted Runner

on: [push, pull_request]

jobs:
  build:
    runs-on: self-hosted  # Sử dụng self-hosted runner
    # Hoặc chỉ định label cụ thể: runs-on: [self-hosted, linux, x64]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run a script
      run: echo "Running on self-hosted runner!"
      
    - name: Check Runner OS Information
      run: |
        echo "## Operating System Information" >> $GITHUB_STEP_SUMMARY
        if [ -f /etc/os-release ]; then
          cat /etc/os-release >> $GITHUB_STEP_SUMMARY
        elif [ "$(uname)" == "Darwin" ]; then
          echo "macOS Version: $(sw_vers -productVersion)" >> $GITHUB_STEP_SUMMARY
        elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
          echo "Windows Version: $(cmd /c ver)" >> $GITHUB_STEP_SUMMARY
        else
          echo "Unknown OS" >> $GITHUB_STEP_SUMMARY
        fi
      shell: bash
      
    - name: Check Hardware Resources
      run: |
        echo "## Hardware Resources" >> $GITHUB_STEP_SUMMARY
        echo "### CPU Information" >> $GITHUB_STEP_SUMMARY
        if [ -f /proc/cpuinfo ]; then
          echo "CPU Cores: $(grep -c processor /proc/cpuinfo)" >> $GITHUB_STEP_SUMMARY
          echo "CPU Model: $(grep "model name" /proc/cpuinfo | head -1 | cut -d ":" -f2 | sed 's/^ *//')" >> $GITHUB_STEP_SUMMARY
        elif [ "$(uname)" == "Darwin" ]; then
          echo "CPU Cores: $(sysctl -n hw.ncpu)" >> $GITHUB_STEP_SUMMARY
          echo "CPU Model: $(sysctl -n machdep.cpu.brand_string)" >> $GITHUB_STEP_SUMMARY
        else
          echo "CPU information not available" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### Memory Information" >> $GITHUB_STEP_SUMMARY
        if [ -f /proc/meminfo ]; then
          echo "Total Memory: $(grep MemTotal /proc/meminfo | awk '{print $2 " " $3}')" >> $GITHUB_STEP_SUMMARY
          echo "Free Memory: $(grep MemFree /proc/meminfo | awk '{print $2 " " $3}')" >> $GITHUB_STEP_SUMMARY
        elif [ "$(uname)" == "Darwin" ]; then
          echo "Total Memory: $(sysctl -n hw.memsize | awk '{print $1/1024/1024 " MB"}')" >> $GITHUB_STEP_SUMMARY
        else
          echo "Memory information not available" >> $GITHUB_STEP_SUMMARY
        fi
      shell: bash
    
    - name: Check Disk Space
      run: |
        echo "## Disk Space" >> $GITHUB_STEP_SUMMARY
        df -h >> $GITHUB_STEP_SUMMARY
      shell: bash
      
    - name: List Installed Software
      run: |
        echo "## Installed Software" >> $GITHUB_STEP_SUMMARY
        
        echo "### Git Version" >> $GITHUB_STEP_SUMMARY
        git --version >> $GITHUB_STEP_SUMMARY
        
        echo "### Node.js Version" >> $GITHUB_STEP_SUMMARY
        if command -v node &> /dev/null; then
          node --version >> $GITHUB_STEP_SUMMARY
        else
          echo "Node.js not installed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### Python Version" >> $GITHUB_STEP_SUMMARY
        if command -v python3 &> /dev/null; then
          python3 --version >> $GITHUB_STEP_SUMMARY
        elif command -v python &> /dev/null; then
          python --version >> $GITHUB_STEP_SUMMARY
        else
          echo "Python not installed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### Docker Version" >> $GITHUB_STEP_SUMMARY
        if command -v docker &> /dev/null; then
          docker --version >> $GITHUB_STEP_SUMMARY
        else
          echo "Docker not installed" >> $GITHUB_STEP_SUMMARY
        fi
      shell: bash
      
    - name: Check Network Configuration
      run: |
        echo "## Network Configuration" >> $GITHUB_STEP_SUMMARY
        echo "### IP Address" >> $GITHUB_STEP_SUMMARY
        if command -v ip &> /dev/null; then
          ip addr | grep "inet " | grep -v 127.0.0.1 >> $GITHUB_STEP_SUMMARY
        elif command -v ifconfig &> /dev/null; then
          ifconfig | grep "inet " | grep -v 127.0.0.1 >> $GITHUB_STEP_SUMMARY
        else
          echo "Network information not available" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### DNS Configuration" >> $GITHUB_STEP_SUMMARY
        if [ -f /etc/resolv.conf ]; then
          cat /etc/resolv.conf >> $GITHUB_STEP_SUMMARY
        else
          echo "DNS information not available" >> $GITHUB_STEP_SUMMARY
        fi
      shell: bash
      
    - name: Check Environment Variables
      run: |
        echo "## Environment Variables" >> $GITHUB_STEP_SUMMARY
        echo "### GitHub Environment Variables" >> $GITHUB_STEP_SUMMARY
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW" >> $GITHUB_STEP_SUMMARY
        echo "GITHUB_RUN_ID: $GITHUB_RUN_ID" >> $GITHUB_STEP_SUMMARY
        echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER" >> $GITHUB_STEP_SUMMARY
        echo "GITHUB_ACTOR: $GITHUB_ACTOR" >> $GITHUB_STEP_SUMMARY
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY" >> $GITHUB_STEP_SUMMARY
        echo "GITHUB_SHA: $GITHUB_SHA" >> $GITHUB_STEP_SUMMARY
        echo "GITHUB_REF: $GITHUB_REF" >> $GITHUB_STEP_SUMMARY
        echo "RUNNER_NAME: $RUNNER_NAME" >> $GITHUB_STEP_SUMMARY
        echo "RUNNER_OS: $RUNNER_OS" >> $GITHUB_STEP_SUMMARY
        echo "RUNNER_ARCH: $RUNNER_ARCH" >> $GITHUB_STEP_SUMMARY
      shell: bash
      
    - name: Check Runner User and Permissions
      run: |
        echo "## User and Permissions" >> $GITHUB_STEP_SUMMARY
        echo "### Current User" >> $GITHUB_STEP_SUMMARY
        id >> $GITHUB_STEP_SUMMARY
        
        echo "### Current Directory" >> $GITHUB_STEP_SUMMARY
        pwd >> $GITHUB_STEP_SUMMARY
        
        echo "### Directory Permissions" >> $GITHUB_STEP_SUMMARY
        ls -la >> $GITHUB_STEP_SUMMARY
      shell: bash
      
    - name: Check Runner Version
      run: |
        echo "## Runner Version" >> $GITHUB_STEP_SUMMARY
        if [ -f "$RUNNER_ROOT/config.sh" ]; then
          $RUNNER_ROOT/config.sh --version >> $GITHUB_STEP_SUMMARY
        else
          echo "Runner version information not available" >> $GITHUB_STEP_SUMMARY
        fi
      shell: bash
      env:
        RUNNER_ROOT: ${{ runner.tool_cache }}/../..
